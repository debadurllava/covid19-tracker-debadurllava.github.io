{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/countries/countries.component.ts","webpack:///src/app/components/countries/countries.component.html","webpack:///src/app/components/dashboard-card/dashboard-card.component.ts","webpack:///src/app/components/dashboard-card/dashboard-card.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/data-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CountriesComponent","service","countries","totalConfirmed","totalActive","totalDeaths","totalRecovered","loading","lineChart","chartType","getDateWiseData","pipe","result","dateWiseData","getGlobalData","data","forEach","cs","push","country","subscribe","complete","updateValues","datatable","selectedCountryData","date","dataTable","options","height","animation","duration","easing","console","log","active","confirmed","deaths","recovered","updateChart","DashboardCardComponent","HomeComponent","dataService","pieChart","columnChart","caseType","globalData","value","next","Number","isNaN","initChart","input","NavbarComponent","DataServiceService","http","globalDataUrl","dateWiseDataUrl","get","responseType","rows","split","mainData","header","dates","splice","row","cols","con","index","dw","Date","parse","raw","temp","Object","values","providedIn","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AAAWC,eAAS,EAAG;AAAvB,KADqB,EAErB;AAACD,UAAI,EAAG,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAFqB,CAAvB;;QASaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACf7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;sEDMaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,uEAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,mFAckB,EAblB,6EAakB,EAZlB,4FAYkB,EAXlB,0GAWkB;AAXI,kBAGtB,uEAHsB,EAItB,oEAJsB,EAKtB,qEALsB,EAMtB,uEANsB;AAWJ,O;AALG,K;;;;;sEAKZA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,6EAHY,EAIZ,4FAJY,EAKZ,0GALY,CADN;AAQRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,uEAJO,CARD;AAcRQ,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC9BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUgB;;AAAuD;;AAAO;;;;;;AAAtD;;AAA+C;;AAAA;;;;;;AAsBnD;;AACI;;AAAI;;AAAO;;AACX;;AAAI;;;;AAAkB;;AACtB;;AAAI;;AAAW;;AACnB;;;;;;;AAHQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDrBfC,kB;AAaX,kCAAoBC,OAApB,EAAkD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AAXpB,aAAAC,SAAA,GAAuB,EAAvB;AACA,aAAAC,cAAA,GAAiB,CAAjB;AACA,aAAAC,WAAA,GAAc,CAAd;AACA,aAAAC,WAAA,GAAc,CAAd;AACA,aAAAC,cAAA,GAAiB,CAAjB;AAGA,aAAAC,OAAA,GAAU,IAAV;AACA,aAAAC,SAAA,GAAkC;AAChCC,mBAAS,EAAG;AADoB,SAAlC;AAGqD;;;;mCAE7C;AAAA;;AAEN,6DACE,KAAKR,OAAL,CAAaS,eAAb,GAA+BC,IAA/B,CACE,2DAAI,UAAAC,MAAM,EAAE;AACV,iBAAI,CAACC,YAAL,GAAoBD,MAApB;AACD,WAFD,CADF,CADF,EAME,KAAKX,OAAL,CAAaa,aAAb,GAA6BH,IAA7B,CAAkC,2DAAI,UAAAC,MAAM,EAAE;AAC5C,iBAAI,CAACG,IAAL,GAAYH,MAAZ;;AACF,iBAAI,CAACG,IAAL,CAAUC,OAAV,CAAkB,UAAAC,EAAE,EAAE;AACpB,mBAAI,CAACf,SAAL,CAAegB,IAAf,CAAoBD,EAAE,CAACE,OAAvB;AACD,aAFD;AAGC,WALiC,CAAlC,CANF,EAYEC,SAZF,CAaA;AACEC,oBAAQ,EAAG,oBAAK;AAEf;AACA,mBAAI,CAACC,YAAL,CAAkB,OAAlB,EAHe,CAIf;;;AACA,mBAAI,CAACf,OAAL,GAAe,KAAf;AACA;AAPH,WAbA;AAuBD;;;sCAGU;AACT,cAAIgB,SAAS,GAAG,EAAhB;AACAA,mBAAS,CAACL,IAAV,CAAe,CAAC,MAAD,EAAS,OAAT,CAAf;AACA,eAAKM,mBAAL,CAAyBR,OAAzB,CAAiC,UAAAC,EAAE,EAAG;AACpCM,qBAAS,CAACL,IAAV,CAAe,CAACD,EAAE,CAACQ,IAAJ,EAAUR,EAAE,QAAZ,CAAf;AACD,WAFD;AAIA,eAAKT,SAAL,GAAiB;AACfC,qBAAS,EAAG,WADG;AAEfiB,qBAAS,EAAGH,SAFG;AAGfI,mBAAO,EAAG;AACRC,oBAAM,EAAE,GADA;AAERC,uBAAS,EAAC;AACRC,wBAAQ,EAAG,IADH;AAERC,sBAAM,EAAG;AAFD;AAFF;AAHK,WAAjB;AAWD;;;qCAKYZ,O,EAAgB;AAAA;;AAC3Ba,iBAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,eAAKJ,IAAL,CAAUC,OAAV,CAAkB,UAAAC,EAAE,EAAE;AACpB,gBAAGA,EAAE,CAACE,OAAH,IAAcA,OAAjB,EAAyB;AACvB,oBAAI,CAACf,WAAL,GAAmBa,EAAE,CAACiB,MAAtB;AACA,oBAAI,CAAC/B,cAAL,GAAsBc,EAAE,CAACkB,SAAzB;AACA,oBAAI,CAAC9B,WAAL,GAAmBY,EAAE,CAACmB,MAAtB;AACA,oBAAI,CAAC9B,cAAL,GAAsBW,EAAE,CAACoB,SAAzB;AACD;AACF,WAPD;AAQA,eAAKb,mBAAL,GAA2B,KAAKX,YAAL,CAAmBM,OAAnB,CAA3B,CAV2B,CAW3B;;AACD,eAAKmB,WAAL;AACA;;;;;;;uBA/EUtC,kB,EAAkB,yJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,mf;AAAA;AAAA;;;ACd/B;;AACI;;AAA4B;;AAAO;;AACvC;;AACA;;AACI;;AAAsB;;AAAsC;;AAC5D;;AACA;;AACI;;AACI;;AAAe;;AAAc;;AAC7B;;AAAmD;AAAA;;AAAA;;AAAA,mBAAU,IAAAsB,YAAA,WAAV;AAAmC,WAAnC;;AAC/C;;AACJ;;AACJ;;AAEJ;;AACA;;AAKA;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACb;;AACJ;;AAEA;;AACI;;AAKJ;;AAEJ;;AAEJ;;AACA;;AACI;;AACJ;;AAEJ;;AACJ;;;;AA/CsC;;AAUE;;AAAA;;AAKhB;;AAAA,yGAAiC,aAAjC,EAAiC,eAAjC,EAAiC,gBAAjC,EAAiC,kBAAjC,EAAiC,aAAjC,EAAiC,eAAjC;;AAiBA;;AAAA;;AAWE;;AAAA;;;;;;;;;;sED7BbtB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTP,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AEd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4C,sB;AASX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAZUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,gH;AAAA;AAAA;ACPnC;;AACI;;AACI;;AACI;;AACE;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AACF;;AACF;;AACN;;AACA;;AACI;;AACI;;AACE;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AACF;;AACF;;AACN;;AACA;;AACI;;AACI;;AACE;;AAAI;;AAAK;;AACX;;AACA;;AACC;;AACD;;AACF;;AACN;;AAEA;;AACI;;AACI;;AACE;;AAAI;;AAAM;;AACZ;;AACA;;AACC;;AACD;;AACF;;AACN;;AAEJ;;;;AApCc;;AAAA;;AAUA;;AAAA;;AAUD;;AAAA;;AAWA;;AAAA;;;;;;;;sED/BAA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT9C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;gBAChC,mD;iBAAM,gB;;;gBAEN,mD;iBAAM,a;;;gBAEN,mD;iBAAM,a;;;gBAEN,mD;iBAAM,gB;;;;;;;;;;;;;;;;;;;;AEdT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa6C,a;AAaX,6BAAoBC,WAApB,EAAsD;AAAA;;AAAlC,aAAAA,WAAA,GAAAA,WAAA;AAZpB,aAAAtC,cAAA,GAAiB,CAAjB;AACA,aAAAC,WAAA,GAAc,CAAd;AACA,aAAAC,WAAA,GAAc,CAAd;AACA,aAAAC,cAAA,GAAiB,CAAjB;AACA,aAAAC,OAAA,GAAU,IAAV;AAEA,aAAAmC,QAAA,GAAiC;AAC/BjC,mBAAS,EAAG;AADmB,SAAjC;AAGA,aAAAkC,WAAA,GAAoC;AAClClC,mBAAS,EAAG;AADsB,SAApC;AAGyD;;;;kCAC/CmC,Q,EAAiB;AAEzB,cAAIrB,SAAS,GAAG,EAAhB;AACAA,mBAAS,CAACL,IAAV,CAAe,CAAC,SAAD,EAAY,OAAZ,CAAf;AAEA,eAAK2B,UAAL,CAAgB7B,OAAhB,CAAwB,UAAAC,EAAE,EAAI;AAC5B,gBAAI6B,KAAJ;AACA,gBAAGF,QAAQ,IAAI,GAAf,EACE,IAAG3B,EAAE,CAACkB,SAAH,GAAa,IAAhB,EACEW,KAAK,GAAC7B,EAAE,CAACkB,SAAT;AACJ,gBAAGS,QAAQ,IAAI,GAAf,EACE,IAAG3B,EAAE,CAACiB,MAAH,GAAY,IAAf,EACEY,KAAK,GAAG7B,EAAE,CAACiB,MAAX;AAEJ,gBAAGU,QAAQ,IAAI,GAAf,EACE,IAAG3B,EAAE,CAACmB,MAAH,GAAW,IAAd,EACEU,KAAK,GAAG7B,EAAE,CAACmB,MAAX;AAEJ,gBAAGQ,QAAQ,IAAI,GAAf,EACE,IAAG3B,EAAE,CAACoB,SAAH,GAAe,IAAlB,EACES,KAAK,GAAG7B,EAAE,CAACoB,SAAX;AAEJd,qBAAS,CAACL,IAAV,CAAe,CACbD,EAAE,CAACE,OADU,EACA2B,KADA,CAAf;AAGD,WApBD;AAqBAd,iBAAO,CAACC,GAAR,CAAYV,SAAZ;AAGA,eAAKmB,QAAL,GAAgB;AACdjC,qBAAS,EAAE,UADG;AAEdiB,qBAAS,EAAEH,SAFG;AAGd;AACAI,mBAAO,EAAE;AACTC,oBAAM,EAAG,GADA;AAETC,uBAAS,EAAC;AACRC,wBAAQ,EAAG,IADH;AAERC,sBAAM,EAAG;AAFD;AAFD;AAJK,WAAhB;AAaA,eAAKY,WAAL,GAAmB;AACjBlC,qBAAS,EAAE,aADM;AAEjBiB,qBAAS,EAAEH,SAFM;AAGjB;AACAI,mBAAO,EAAE;AACTC,oBAAM,EAAG;AADA;AAJQ,WAAnB;AAQD;;;mCACO;AAAA;;AACN,eAAKa,WAAL,CAAiB3B,aAAjB,GACCM,SADD,CAEE;AACE2B,gBAAI,EAAG,cAACnC,MAAD,EAAY;AACjBoB,qBAAO,CAACC,GAAR,CAAYrB,MAAZ;AAEA,oBAAI,CAACiC,UAAL,GAAkBjC,MAAlB;AACAA,oBAAM,CAACI,OAAP,CAAe,UAAAC,EAAE,EAAI;AACnB,oBAAG,CAAC+B,MAAM,CAACC,KAAP,CAAahC,EAAE,CAACkB,SAAhB,CAAJ,EAAgC;AAChC,wBAAI,CAAC/B,WAAL,IAAoBa,EAAE,CAACiB,MAAvB;AACA,wBAAI,CAAC/B,cAAL,IAAsBc,EAAE,CAACkB,SAAzB;AACA,wBAAI,CAAC9B,WAAL,IAAkBY,EAAE,CAACmB,MAArB;AACA,wBAAI,CAAC9B,cAAL,IAAqBW,EAAE,CAACiB,MAAxB;AACC;AACF,eAPD;;AAQA,oBAAI,CAACgB,SAAL,CAAe,GAAf;AACD,aAdH;AAeE7B,oBAAQ,EAAG,oBAAK;AACd,oBAAI,CAACd,OAAL,GAAa,KAAb;AACD;AAjBH,WAFF;AAsBD;;;oCAEW4C,K,EAAwB;AAClCnB,iBAAO,CAACC,GAAR,CAAYkB,KAAK,CAACL,KAAlB;AACA,eAAKI,SAAL,CAAeC,KAAK,CAACL,KAArB;AACD;;;;;;;uBA7FUN,a,EAAa,yJ;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,w4B;AAAA;AAAA;;;ACV1B;;AACE;;AAA4B;;AAAO;;AACrC;;AACA;;AACI;;AAAsB;;AAAuB;;AAC7C;;AACA;;AAIJ;;AACA;;AACA;;AACE;;AACE;;AAAmB;;AAAiB;;AACpC;;AACE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAF,WAAA,KAAT;AAAuB,WAAvB;;AAAxC;;AACA;;AAAe;;AAAS;;AAC1B;;AACF;;AACA;;AACE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,WAAA,KAAT;AAAuB,WAAvB;;AAAxC;;AACA;;AAAe;;AAAS;;AAC1B;;AACF;;AACA;;AACE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,WAAA,KAAT;AAAuB,WAAvB;;AAAxC;;AACA;;AAAe;;AAAM;;AACvB;;AACF;;AACA;;AACE;;AACE;;AAAwC;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,WAAA,KAAT;AAAuB,WAAvB;;AAAxC;;AACA;;AAAe;;AAAM;;AACvB;;AACF;;AACF;;AACF;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AAnCA;;;;AAZsC;;AAMd;;AAAA,yGAAiC,aAAjC,EAAiC,eAAjC,EAAiC,gBAAjC,EAAiC,kBAAjC,EAAiC,aAAjC,EAAiC,eAAjC;;AAoCN;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDnCLE,a,EAAa;cALzB,uDAKyB;eALf;AACT/C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayD,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,miB;AAAA;AAAA;ACP5B;;AACI;;AAAuC;;AAAgB;;AACvD;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmC;;AAAK;;AAAsB;;AAAS;;AAAO;;AAChF;;AACA;;AACE;;AAA2C;;AAAS;;AACtD;;AACF;;AACF;;AACF;;;;;;;;;sEDRWA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3D,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa0D,kB;AAGX,kCAAoBC,IAApB,EAAuC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,aAAA,GAAgB,gIAAhB;AACA,aAAAC,eAAA,GAAiB,wJAAjB;AACkC;;;;0CAE3B;AACb,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKD,eAAnB,EAAmC;AAACE,wBAAY,EAAG;AAAhB,WAAnC,EACN/C,IADM,CACD,2DAAI,UAAAC,MAAM,EAAI;AAClB,gBAAI+C,IAAI,GAAG/C,MAAM,CAACgD,KAAP,CAAa,IAAb,CAAX;AACA5B,mBAAO,CAACC,GAAR,CAAY0B,IAAZ;AACA,gBAAIE,QAAQ,GAAG,EAAf;AACA,gBAAIC,MAAM,GAAGH,IAAI,CAAC,CAAD,CAAjB;AACA,gBAAII,KAAK,GAAGD,MAAM,CAACF,KAAP,CAAa,SAAb,CAAZ;AACAG,iBAAK,CAACC,MAAN,CAAa,CAAb,EAAiB,CAAjB,EANkB,CAOlB;;AACAL,gBAAI,CAACK,MAAL,CAAY,CAAZ,EAAgB,CAAhB;AAEAL,gBAAI,CAAC3C,OAAL,CAAa,UAAAiD,GAAG,EAAE;AAChB,kBAAIC,IAAI,GAAGD,GAAG,CAACL,KAAJ,CAAU,SAAV,CAAX;AACA,kBAAIO,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAd;AACAA,kBAAI,CAACF,MAAL,CAAY,CAAZ,EAAgB,CAAhB,EAHgB,CAIhB;;AACAH,sBAAQ,CAACM,GAAD,CAAR,GAAgB,EAAhB;AACAD,kBAAI,CAAClD,OAAL,CAAa,UAAC8B,KAAD,EAAQsB,KAAR,EAAgB;AAC3B,oBAAIC,EAAE,GAAkB;AACtB,0BAAO,CAACvB,KADc;AAEtB3B,yBAAO,EAAGgD,GAFY;AAGtB1C,sBAAI,EAAG,IAAI6C,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACK,KAAD,CAAhB,CAAT;AAHe,iBAAxB;AAKAP,wBAAQ,CAACM,GAAD,CAAR,CAAcjD,IAAd,CAAmBmD,EAAnB;AACD,eAPD;AAQD,aAdD,EAVkB,CAyBlB;;AACA,mBAAOR,QAAP,CA1BkB,CA2BnB;AACA,WA5BK,CADC,CAAP;AA8BD;;;wCACY;AACZ,iBAAO,KAAKP,IAAL,CAAUG,GAAV,CAAc,KAAKF,aAAnB,EAAmC;AAACG,wBAAY,EAAG;AAAhB,WAAnC,EAA4D/C,IAA5D,CACL,2DAAI,UAAAC,MAAM,EAAE;AACX,gBAAIG,IAAI,GAAwB,EAAhC;AACA,gBAAIyD,GAAG,GAAG,EAAV;AACA,gBAAIb,IAAI,GAAG/C,MAAM,CAACgD,KAAP,CAAa,IAAb,CAAX;AACAD,gBAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,EAJW,CAKX;;AACAL,gBAAI,CAAC3C,OAAL,CAAa,UAAAiD,GAAG,EAAE;AAChB,kBAAIC,IAAI,GAAGD,GAAG,CAACL,KAAJ,CAAU,SAAV,CAAX,CADgB,CAEhB;;AACA,kBAAI3C,EAAE,GAAG;AACPE,uBAAO,EAAG+C,IAAI,CAAC,CAAD,CADP;AAEP/B,yBAAS,EAAG,CAAC+B,IAAI,CAAC,CAAD,CAFV;AAGP9B,sBAAM,EAAG,CAAC8B,IAAI,CAAC,CAAD,CAHP;AAIP7B,yBAAS,EAAG,CAAC6B,IAAI,CAAC,CAAD,CAJV;AAKPhC,sBAAM,EAAG,CAACgC,IAAI,CAAC,EAAD;AALP,eAAT;AAQA,kBAAKO,IAAI,GAAsBD,GAAG,CAACvD,EAAE,CAACE,OAAJ,CAAlC;;AACA,kBAAGsD,IAAH,EAAQ;AACNA,oBAAI,CAACvC,MAAL,GAAcjB,EAAE,CAACiB,MAAH,GAAYuC,IAAI,CAACvC,MAA/B;AACAuC,oBAAI,CAACtC,SAAL,GAAiBlB,EAAE,CAACkB,SAAH,GAAesC,IAAI,CAACtC,SAArC;AACAsC,oBAAI,CAACrC,MAAL,GAAcnB,EAAE,CAACmB,MAAH,GAAYqC,IAAI,CAACrC,MAA/B;AACAqC,oBAAI,CAACpC,SAAL,GAAiBpB,EAAE,CAACoB,SAAH,GAAeoC,IAAI,CAACpC,SAArC;AACAmC,mBAAG,CAACvD,EAAE,CAACE,OAAJ,CAAH,GAAkBsD,IAAlB;AACC,eANH,MAMO;AACHD,mBAAG,CAACvD,EAAE,CAACE,OAAJ,CAAH,GAAkBF,EAAlB;AACD;AACJ,aArBD,EANW,CA6BX;;AACA,mBAA4ByD,MAAM,CAACC,MAAP,CAAcH,GAAd,CAA5B;AACA,WA/BD,CADK,CAAP;AAkCA;;;;;;;uBAxEUnB,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVuB,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIhD,OAAO,CAACiD,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path: '', component : HomeComponent},\n  {path : 'countries', component: CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\nimport { Ng2GoogleChartsModule, GoogleChartsSettings } from 'ng2-google-charts';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { count } from 'rxjs/operators';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { GoogleChartInterface } from 'ng2-google-charts';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  data : GlobalDataSummary[]; \n  countries : string[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData : DateWiseData[];\n  dateWiseData;\n  loading = true;\n  lineChart : GoogleChartInterface ={\n    chartType : 'lineChart'\n  }\n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ),\n      this.service.getGlobalData().pipe(map(result=>{\n        this.data = result;\n      this.data.forEach(cs=>{\n        this.countries.push(cs.country)\n      })\n      }))\n    ).subscribe(\n    {\n      complete : () =>{\n        \n       // this.selectedCountryData = this.dateWiseData['India']\n       this.updateValues('India');\n       // this.updateChart();\n       this.loading = false;\n      }\n    }\n    )\n  }\n\n\n  updateChart(){\n    let datatable = [];\n    datatable.push(['date', 'cases'])\n    this.selectedCountryData.forEach(cs =>{\n      datatable.push([cs.date, cs.case])\n    })\n\n    this.lineChart = {\n      chartType : 'lineChart',\n      dataTable : datatable,\n      options : {\n        height: 500,\n        animation:{\n          duration : 1000,\n          easing : 'out',\n        },\n      },\n    };\n  }\n\n\n\n\n  updateValues(country : string){\n    console.log(country);\n    this.data.forEach(cs=>{\n      if(cs.country == country){\n        this.totalActive = cs.active\n        this.totalConfirmed = cs.confirmed;\n        this.totalDeaths = cs.deaths;\n        this.totalRecovered = cs.recovered\n      }\n    })\n    this.selectedCountryData = this.dateWiseData [country];\n    //console.log(this.selectedCountryData)\n   this.updateChart();\n  }\n\n}\n","<div class=\"ui inverted dimmer active\"[class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Countries Wise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n                <option value=\"{{con}}\" *ngFor ='let con of countries'>{{con}}</option>\n            </select>\n        </div>\n\n    </div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed'\n    [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'\n    [totalActive]='totalActive'></app-dashboard-card>\n\n    <div class=\"card row\">\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <td>Sno.</td>\n                        <td>Date</td>\n                        <td>Cases</td>\n                    </tr>\n                </thead>\n    \n                <tbody>\n                    <tr *ngFor = 'let cs of selectedCountryData; index as i '>\n                        <td>{{i+1}}</td>\n                        <td>{{cs.date | date}}</td>\n                        <td>{{cs.case}}</td>\n                    </tr>\n                </tbody>\n                \n            </table>\n\n        </div>\n        <div class=\"col\">\n            <google-chart [data]=\"lineChart\"></google-chart>\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Confirmed</h3>\n            </div>\n            <div class=\"value\">\n              {{totalConfirmed}}\n            </div>\n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n              {{totalRecovered}}\n            </div>\n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Death</h3>\n            </div>\n            <div class=\"value\">\n             {{totalDeaths}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n             {{totalActive}}\n            </div>\n          </div>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { GoogleChartInterface } from 'ng2-google-charts';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData: GlobalDataSummary[];\n  pieChart : GoogleChartInterface ={\n    chartType : 'pieChart'\n  }\n  columnChart : GoogleChartInterface ={\n    chartType : 'ColumnChart'\n  }\n  constructor(private dataService : DataServiceService) { }\n  initChart(caseType : string){\n\n    let datatable = [];\n    datatable.push([\"Country\", \"Cases\"])\n\n    this.globalData.forEach(cs => {\n      let value : number;\n      if(caseType == 'c')\n        if(cs.confirmed>2000)\n          value=cs.confirmed\n      if(caseType == 'a')\n        if(cs.active > 2000)\n          value = cs.active\n        \n      if(caseType == 'd')\n        if(cs.deaths >1000)\n          value = cs.deaths\n\n      if(caseType == 'r')\n        if(cs.recovered > 2000)\n          value = cs.recovered\n\n      datatable.push([\n        cs.country , value\n      ])\n    })\n    console.log(datatable);\n\n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable: datatable,\n      //firstRowIsData: true,\n      options: {\n      height : 500,\n      animation:{\n        duration : 1000,\n        easing : 'out',\n      },\n      },\n    };\n\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable: datatable,\n      //firstRowIsData: true,\n      options: {\n      height : 500  \n      },\n    };\n  }\n  ngOnInit(): void {\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next : (result) => {\n          console.log(result)\n\n          this.globalData = result;\n          result.forEach(cs => {\n            if(!Number.isNaN(cs.confirmed)) {\n            this.totalActive += cs.active;\n            this.totalConfirmed+= cs.confirmed;\n            this.totalDeaths+=cs.deaths;\n            this.totalRecovered+=cs.active;\n            }\n          })\n          this.initChart('c');\n        },\n        complete : () =>{\n          this.loading=false;\n        }\n      }\n    )\n  }\n\n  updateChart(input : HTMLInputElement){\n    console.log(input.value);\n    this.initChart(input.value)\n  }\n\n}\n","<div class=\"ui inverted dimmer active\"[class.active]='loading'>\n  <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n    <hr>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed'\n    [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'\n    [totalActive]='totalActive'></app-dashboard-card>\n</div>\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"fruit\">Select Case Type:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"c\" value=\"c\" #c (click)='updateChart(c)' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"r\" value=\"r\" #r (click)='updateChart(r)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\">Recovered</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"d\" value=\"d\" #d (click)='updateChart(d)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"a\" value=\"a\" #a (click)='updateChart(a)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\">Active</label>\n      </div>\n    </div>\n  </div>\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [data]=\"pieChart\"></google-chart>\n  </div>\n  <div class=\"col\"> \n    <google-chart [data]=\"columnChart\"></google-chart>\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink='/'>Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='countries'>Countries</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from  'rxjs/operators';\nimport { GlobalDataSummary } from '../models/global-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  private globalDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/06-22-2020.csv';\n  private dateWiseDataUrl ='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'\n  constructor(private http : HttpClient) { }\n\n  getDateWiseData(){\n    return this.http.get(this.dateWiseDataUrl,{responseType : 'text'})\n    .pipe(map(result => {\n      let rows = result.split('\\n');\n      console.log(rows);\n      let mainData = {}; \n      let header = rows[0];\n      let dates = header.split(/,(?=\\S)/)\n      dates.splice(0 , 4);\n      //console.log(dates);\n      rows.splice(0 , 1);\n\n      rows.forEach(row=>{\n        let cols = row.split(/,(?=\\S)/)\n        let con = cols[1];\n        cols.splice(0 , 4);\n        //console.log(con , cols); \n        mainData[con] = [];\n        cols.forEach((value, index)=>{\n          let dw : DateWiseData = {\n            case : +value,\n            country : con,\n            date : new Date(Date.parse(dates[index]))\n          }\n          mainData[con].push(dw)\n        })\n      })\n      //console.log(mainData);\n      return mainData;\n     // return result;\n    }))\n  }\n  getGlobalData(){\n   return this.http.get(this.globalDataUrl , {responseType : 'text'}).pipe(\n     map(result=>{\n      let data: GlobalDataSummary[] = [];\n      let raw = {}\n      let rows = result.split('\\n');\n      rows.splice(0, 1);\n      //console.log(rows);\n      rows.forEach(row=>{\n        let cols = row.split(/,(?=\\S)/)\n        //console.log(cols);\n        let cs = {\n          country : cols[3],\n          confirmed : +cols[7],\n          deaths : +cols[8],\n          recovered : +cols[9],\n          active : +cols[10],\n\n        };\n        let  temp: GlobalDataSummary = raw[cs.country];\n        if(temp){\n          temp.active = cs.active + temp.active\n          temp.confirmed = cs.confirmed + temp.confirmed\n          temp.deaths = cs.deaths + temp.deaths\n          temp.recovered = cs.recovered + temp.recovered\n          raw[cs.country] = temp;\n          }else{\n            raw[cs.country] = cs;\n          }\n      })\n\n      //console.log(raw);\n      return <GlobalDataSummary[]>Object.values(raw);\n     }) \n   )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}