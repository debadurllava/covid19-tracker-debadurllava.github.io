{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path: '', component : HomeComponent},\n  {path : 'countries', component: CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\nimport { Ng2GoogleChartsModule, GoogleChartsSettings } from 'ng2-google-charts';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { count } from 'rxjs/operators';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { GoogleChartInterface } from 'ng2-google-charts';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n  data : GlobalDataSummary[]; \n  countries : string[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData : DateWiseData[];\n  dateWiseData;\n  loading = true;\n  lineChart : GoogleChartInterface ={\n    chartType : 'lineChart'\n  }\n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ),\n      this.service.getGlobalData().pipe(map(result=>{\n        this.data = result;\n      this.data.forEach(cs=>{\n        this.countries.push(cs.country)\n      })\n      }))\n    ).subscribe(\n    {\n      complete : () =>{\n        \n       // this.selectedCountryData = this.dateWiseData['India']\n       this.updateValues('India');\n       // this.updateChart();\n       this.loading = false;\n      }\n    }\n    )\n  }\n\n\n  updateChart(){\n    let datatable = [];\n    datatable.push(['date', 'cases'])\n    this.selectedCountryData.forEach(cs =>{\n      datatable.push([cs.date, cs.case])\n    })\n\n    this.lineChart = {\n      chartType : 'lineChart',\n      dataTable : datatable,\n      options : {\n        height: 500,\n        animation:{\n          duration : 1000,\n          easing : 'out',\n        },\n      },\n    };\n  }\n\n\n\n\n  updateValues(country : string){\n    console.log(country);\n    this.data.forEach(cs=>{\n      if(cs.country == country){\n        this.totalActive = cs.active\n        this.totalConfirmed = cs.confirmed;\n        this.totalDeaths = cs.deaths;\n        this.totalRecovered = cs.recovered\n      }\n    })\n    this.selectedCountryData = this.dateWiseData [country];\n    //console.log(this.selectedCountryData)\n   this.updateChart();\n  }\n\n}\n","<div class=\"ui inverted dimmer active\"[class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Countries Wise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)='updateValues(input.value)'>\n                <option value=\"{{con}}\" *ngFor ='let con of countries'>{{con}}</option>\n            </select>\n        </div>\n\n    </div>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed'\n    [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'\n    [totalActive]='totalActive'></app-dashboard-card>\n\n    <div class=\"card row\">\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <td>Sno.</td>\n                        <td>Date</td>\n                        <td>Cases</td>\n                    </tr>\n                </thead>\n    \n                <tbody>\n                    <tr *ngFor = 'let cs of selectedCountryData; index as i '>\n                        <td>{{i+1}}</td>\n                        <td>{{cs.date | date}}</td>\n                        <td>{{cs.case}}</td>\n                    </tr>\n                </tbody>\n                \n            </table>\n\n        </div>\n        <div class=\"col\">\n            <google-chart [data]=\"lineChart\"></google-chart>\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Confirmed</h3>\n            </div>\n            <div class=\"value\">\n              {{totalConfirmed}}\n            </div>\n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n              {{totalRecovered}}\n            </div>\n          </div>\n    </div>\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Death</h3>\n            </div>\n            <div class=\"value\">\n             {{totalDeaths}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n             {{totalActive}}\n            </div>\n          </div>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { GoogleChartInterface } from 'ng2-google-charts';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData: GlobalDataSummary[];\n  pieChart : GoogleChartInterface ={\n    chartType : 'pieChart'\n  }\n  columnChart : GoogleChartInterface ={\n    chartType : 'ColumnChart'\n  }\n  constructor(private dataService : DataServiceService) { }\n  initChart(caseType : string){\n\n    let datatable = [];\n    datatable.push([\"Country\", \"Cases\"])\n\n    this.globalData.forEach(cs => {\n      let value : number;\n      if(caseType == 'c')\n        if(cs.confirmed>2000)\n          value=cs.confirmed\n      if(caseType == 'a')\n        if(cs.active > 2000)\n          value = cs.active\n        \n      if(caseType == 'd')\n        if(cs.deaths >1000)\n          value = cs.deaths\n\n      if(caseType == 'r')\n        if(cs.recovered > 2000)\n          value = cs.recovered\n\n      datatable.push([\n        cs.country , value\n      ])\n    })\n    console.log(datatable);\n\n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable: datatable,\n      //firstRowIsData: true,\n      options: {\n      height : 500,\n      animation:{\n        duration : 1000,\n        easing : 'out',\n      },\n      },\n    };\n\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable: datatable,\n      //firstRowIsData: true,\n      options: {\n      height : 500  \n      },\n    };\n  }\n  ngOnInit(): void {\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next : (result) => {\n          console.log(result)\n\n          this.globalData = result;\n          result.forEach(cs => {\n            if(!Number.isNaN(cs.confirmed)) {\n            this.totalActive += cs.active;\n            this.totalConfirmed+= cs.confirmed;\n            this.totalDeaths+=cs.deaths;\n            this.totalRecovered+=cs.active;\n            }\n          })\n          this.initChart('c');\n        },\n        complete : () =>{\n          this.loading=false;\n        }\n      }\n    )\n  }\n\n  updateChart(input : HTMLInputElement){\n    console.log(input.value);\n    this.initChart(input.value)\n  }\n\n}\n","<div class=\"ui inverted dimmer active\"[class.active]='loading'>\n  <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n    <hr>\n    <app-dashboard-card [totalConfirmed]='totalConfirmed'\n    [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'\n    [totalActive]='totalActive'></app-dashboard-card>\n</div>\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"fruit\">Select Case Type:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"c\" value=\"c\" #c (click)='updateChart(c)' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"r\" value=\"r\" #r (click)='updateChart(r)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\">Recovered</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"d\" value=\"d\" #d (click)='updateChart(d)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"a\" value=\"a\" #a (click)='updateChart(a)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\">Active</label>\n      </div>\n    </div>\n  </div>\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [data]=\"pieChart\"></google-chart>\n  </div>\n  <div class=\"col\"> \n    <google-chart [data]=\"columnChart\"></google-chart>\n  </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink='/'>Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink='/'>Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink='countries'>Countries</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from  'rxjs/operators';\nimport { GlobalDataSummary } from '../models/global-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  private globalDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/06-22-2020.csv';\n  private dateWiseDataUrl ='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'\n  constructor(private http : HttpClient) { }\n\n  getDateWiseData(){\n    return this.http.get(this.dateWiseDataUrl,{responseType : 'text'})\n    .pipe(map(result => {\n      let rows = result.split('\\n');\n      console.log(rows);\n      let mainData = {}; \n      let header = rows[0];\n      let dates = header.split(/,(?=\\S)/)\n      dates.splice(0 , 4);\n      //console.log(dates);\n      rows.splice(0 , 1);\n\n      rows.forEach(row=>{\n        let cols = row.split(/,(?=\\S)/)\n        let con = cols[1];\n        cols.splice(0 , 4);\n        //console.log(con , cols); \n        mainData[con] = [];\n        cols.forEach((value, index)=>{\n          let dw : DateWiseData = {\n            case : +value,\n            country : con,\n            date : new Date(Date.parse(dates[index]))\n          }\n          mainData[con].push(dw)\n        })\n      })\n      //console.log(mainData);\n      return mainData;\n     // return result;\n    }))\n  }\n  getGlobalData(){\n   return this.http.get(this.globalDataUrl , {responseType : 'text'}).pipe(\n     map(result=>{\n      let data: GlobalDataSummary[] = [];\n      let raw = {}\n      let rows = result.split('\\n');\n      rows.splice(0, 1);\n      //console.log(rows);\n      rows.forEach(row=>{\n        let cols = row.split(/,(?=\\S)/)\n        //console.log(cols);\n        let cs = {\n          country : cols[3],\n          confirmed : +cols[7],\n          deaths : +cols[8],\n          recovered : +cols[9],\n          active : +cols[10],\n\n        };\n        let  temp: GlobalDataSummary = raw[cs.country];\n        if(temp){\n          temp.active = cs.active + temp.active\n          temp.confirmed = cs.confirmed + temp.confirmed\n          temp.deaths = cs.deaths + temp.deaths\n          temp.recovered = cs.recovered + temp.recovered\n          raw[cs.country] = temp;\n          }else{\n            raw[cs.country] = cs;\n          }\n      })\n\n      //console.log(raw);\n      return <GlobalDataSummary[]>Object.values(raw);\n     }) \n   )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}